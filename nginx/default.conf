# There is an upstream, called 'client' located at port 3000
# This defines the react server
upstream client {
    server client:3000;
}

# This defines the express api server, called 'api'
# Note: server is an nginx special word, which is why we 
# can't call this upstream 'server'
upstream api {
    server api:5000;
}

server {
    # listen on port 80
    listen 80;

    # If anyone ever goes to '/' then proxy them to the react server
    location / {
        proxy_pass http://client;
    }

    # If anyone ever goes to '/api' then proxy them to the api server
    location /api {
        # Trim off the /api prefix from the path when proxying
        # Regex, match anything in the curly braces and put it into 
        # the $1 placeholder. break is a directive and says not to apply
        # any other rewrite rules so you don't have constant bouncing 
        # around of rule matches in the nginx server
        rewrite /api/(.*) /$1 break;

        proxy_pass http://api;
    }

    # The websocket is on path /sockjs-node
    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}